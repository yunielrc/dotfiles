#!/usr/bin/env bash

set -euE

name='StarUML'
readonly app_image="${name}-x86_64.AppImage"
readonly app_icon="${name,,}"

readonly dest_base_dir="$(realpath ~/.local)"
readonly app_image_dest_dir="${dest_base_dir}/bin"
readonly app_desktop_dest_dir="${dest_base_dir}/share/applications"
readonly app_icon_dest_dir="${dest_base_dir}/share/icons"

# Idempotent
type -P "$app_image" &> /dev/null && {
  inf "${app_image} currently installed"
  exit 0
}

mkdir --parents ~/.local/{bin,share/applications,share/icons} || :

readonly tmp_dir="$(mktemp -d)"
cd "$tmp_dir"

on_exit() {
  rm -rf "$tmp_dir"
}
trap on_exit INT TERM EXIT

# Download
readonly url="$(util_html_query_selector 'http://staruml.io/download' 'a[href$=".AppImage"]' 'href')"
wget "$url" -O "$app_image"

# Patch
readonly appimagetool_url="$(curl --silent https://api.github.com/repos/AppImage/AppImageKit/releases/latest | sed 's/"//g' | grep -P 'browser_download_url:\s+.+appimagetool-x86_64.AppImage' | grep -Po 'https://.*appimagetool-x86_64.AppImage$')"
readonly appimagetool=appimagetool-x86_64.AppImage

wget "$appimagetool_url" -O "$appimagetool"
chmod --verbose +x ./*.AppImage

"./${app_image}" --appimage-extract
rm --verbose "./${app_image}"

cd ./squashfs-root/resources
npx asar extract ./app.asar app
rm --verbose ./app.asar

patch -u ./app/src/engine/license-manager.js -i "${PKG_PATH}/license-manager.patch"

npx asar pack ./app app.asar
rm -rf ./app

cd "$tmp_dir"

"./${appimagetool}" ./squashfs-root/ "$app_image"

# Install
chmod --verbose +x "$app_image"
mv --verbose "$app_image" "$app_image_dest_dir"
cp --verbose "${PKG_CONTENT}/${app_icon}.png" "$app_icon_dest_dir"

create_desktop_file "$name" \
'A sophisticated software modeler' \
'Development;' \
'DEV;uml;desarrollo;design;dise√±o;arquitectura;4c;model;' \
"$app_image" \
"$app_icon" \
"staruml" \
"$name" \
"$app_desktop_dest_dir"
