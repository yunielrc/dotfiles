#!/usr/bin/env bash

if [[ "${NOLOCK:-}" != true && "${FLOCKER:-}" != "$0" ]]; then
  exec env FLOCKER="$0" flock -E 3 -en "$0" "$0" "$@" || :
fi

# Bootstrap a configuration management available in cm folder

readonly SCRIPT_NAME="$(basename "${0}")"
readonly BASE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly WORK_DIR="${WORK_DIR:-"$BASE_PATH"}"

. "${BASE_PATH}/lib/dotfiles.bash"

readonly CM_PATH="${WORK_DIR}/cm"

readonly INCLUDE_BASE_CM="${INCLUDE_BASE_CM:-true}"

usage(){

  cat <<HELPMSG
  Usage:
  ${SCRIPT_NAME} <cm>

  Install dotfiles and apps

  Options:
    -h, --help          Show this help

  Examples:
  \$ {SCRIPT_NAME} desktop
  \$ {SCRIPT_NAME} desktop dummy

HELPMSG
}

on_exit() {
  :
}

setup_cm() {
  for cm in "$@"; do
    local cm_path="${CM_PATH}/${cm}.bash"

    if [[ ! -f "$cm_path" ]]; then
      err "Configuration management '${cm}' doesn't exists"
      usage
      return 1
    fi
    echo -e "${WHITE}# Setting cm ${NOCOLOR}${LIGHTPURPLE}${cm}${NOCOLOR}\n"
    bash "$cm_path"
    echo
  done
}

load_base_cm(){
  if [[ -n "${DOTF_BASE_CM:-}" && "${#DOTF_BASE_CM[@]}" -gt 0 ]]; then
    for cm in "${DOTF_BASE_CM[@]}"; do
      setup_cm "$cm"
    done
  fi
}

main() {

  [[ $# -eq 0 ]] && set -- '-h'

  local positional=()

  while [[ $# -gt 0 ]]; do
    case "${1:-}" in
    -h | --help)
      usage
      return 0
      ;;
    *) # unknown flag/switch
      positional+=("$1")
      shift
      ;;
    esac
  done

  set -- "${positional[@]}" # restore positional params

  if [[ "${INCLUDE_BASE_CM:-}" == true ]]; then
    load_base_cm
  fi
  setup_cm "$@"
}

trap on_exit EXIT

if [[ "${BASH_SOURCE[0]}" = "${0}" ]]; then
  main "$@"
  exit $?
fi
